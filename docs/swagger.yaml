definitions:
  models.Post:
    properties:
      body:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: <email>
    name: Rohit Kumar
    url: https://github.com/rohit1kumar/gin-ping
  description: This is a sample API built with Go and Postgres.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: GinPing API
  version: "1.0"
paths:
  /posts:
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of posts
      parameters:
      - default: 10
        description: Number of items per page
        in: query
        maximum: 20
        name: limit
        type: integer
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved posts
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Page not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get paginated posts
      tags:
      - posts
    post:
      consumes:
      - application/json
      description: Create a new blog post
      parameters:
      - description: Post object
        in: body
        name: body
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created post
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad request
          schema:
            type: object
        "500":
          description: Internal server error
          schema:
            type: object
      summary: Create a new post
      tags:
      - posts
  /posts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing post by its ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted post
          schema:
            type: object
        "404":
          description: Post not found
          schema:
            type: object
        "500":
          description: Internal server error
          schema:
            type: object
      summary: Delete a post
      tags:
      - posts
    get:
      consumes:
      - application/json
      description: Retrieve a specific post by its ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved post
          schema:
            type: object
        "404":
          description: Post not found
          schema:
            type: object
      summary: Get a post by ID
      tags:
      - posts
    put:
      consumes:
      - application/json
      description: Update an existing post by its ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated post object
        in: body
        name: body
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated post
          schema:
            type: object
        "400":
          description: Bad request
          schema:
            type: object
        "404":
          description: Post not found
          schema:
            type: object
        "500":
          description: Internal server error
          schema:
            type: object
      summary: Update a post
      tags:
      - posts
schemes:
- https
- http
swagger: "2.0"
